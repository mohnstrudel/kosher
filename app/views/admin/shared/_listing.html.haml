-if object.has_attribute? :category_id
  =form_for :products, method: :get do |f|
    .ibox-content.m-b-sm.border-bottom
      .row
        .col-sm-6
          .form-group
            =select_tag(:category_id, options_from_collection_for_select(Category.all, :id, :title, params[:category_id]), class: 'form-control select2_search_categories', prompt: t('admin.form.actions.choose_category'))
        .col-sm-6
          .form-group
            =select_tag(:manufacturer_id, options_from_collection_for_select(Manufacturer.all, :id, :title, params[:manufacturer_id]), class: 'form-control select2_search_manufacturers', prompt: t('admin.form.actions.choose_manufacturer'))
      .row
        .col-sm-12
          .input-group
            =text_field_tag :keywords, params[:keywords], class: "input form-control", placeholder: t('admin.form.actions.search')
            %span.input-group-btn
              =submit_tag t('admin.form.buttons.search'), class: "btn btn-primary"
      .row
        .col-sm-12
          .form-group
      .row
        .col-sm-12
          .form-group
            .i-checks
              %label
                =check_box_tag :incomplete, true, params[:incomplete], class: ""
                %i
                =t('admin.form.buttons.only_incomplete')

            


            

.row
  .col-lg-12
    .ibox.float-e-margins
      .ibox-title
        %h5
          ="#{object_name(object).pluralize.capitalize} here"
        .ibox-tools
          %a.collapse-link
            %i.fa.fa-chevron-up
          %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
            %i.fa.fa-wrench
          %ul.dropdown-menu.dropdown-user
            %li
              %a{:href => "#"} Config option 1
            %li
              %a{:href => "#"} Config option 2
          %a.close-link
            %i.fa.fa-times
      .ibox-content
        .row
          .col-sm-12.m-b-xs
            .pull-right
              -if params[:sublevel]
                =link_to "#{create_link_text_helper(object)}", send("new_admin_#{local_assigns[:namespace]}#{object_name(object)}_path",sublevel: true), class: "btn btn-w-m btn-primary", id: "new_entry"
              -else
                =link_to "#{create_link_text_helper(object)}", send("new_admin_#{local_assigns[:namespace]}#{object_name(object)}_path"), class: "btn btn-w-m btn-primary", id: "new_entry"
              
        .table-responsive
          %table.table.table-striped#listing_table
            %thead
              %tr
                %th
                -if object.has_attribute? :url
                  %th URL
                -if object.has_attribute? :image
                  %th
                    =t('admin.form.model.image')
                -if object.has_attribute? :logo
                  %th
                    =t('admin.form.model.logo')  
                -if object.has_attribute? :title
                  %th
                    =t('admin.form.model.title')
                -if object.has_attribute? :category_id
                  %th
                    =t('admin.form.model.category')
                -if object.has_attribute? :manufacturer_id
                  %th
                    =t('admin.form.model.manufacturer')
                -if object.has_attribute? :question
                  %th
                    =t('admin.form.model.question')
                -if object.has_attribute? :name
                  %th
                    =t('admin.form.model.name')
                -if object.has_attribute? :first_name
                  %th
                    =t('admin.form.model.first_name')
                -if object.has_attribute? :body
                  %th
                    =t('admin.form.model.body')
                -if object.has_attribute? :slug
                  %th
                    =t('admin.form.model.slug')
                -if object.has_attribute? :email
                  %th
                    =t('admin.form.model.email')
                %th
                  =t('admin.form.model.created')
                %th.text-right
                  =t('admin.form.actions.main')
            %tbody
              -object.each do |obj|
                %tr
                  %td
                    %input.i-checks{:name => "input[]", :type => "checkbox"}/
                  -if obj.respond_to?(:url)
                    %td
                      =obj.url
                  -if obj.respond_to?(:image) 
                    %td
                      =image_tag obj.image.url(:mini_thumb)
                  -if obj.respond_to?(:logo)
                    %td
                      =image_tag_or_default(obj, 'logo', version: :mini_thumb)
                  -if obj.respond_to?(:title)
                    %td
                      =link_to obj.title, send("edit_admin_#{local_assigns[:namespace]}#{object_name(object)}_path", obj)
                  -if obj.respond_to?(:category_id)
                    %td
                      =obj.category.try(:title)
                  -if obj.respond_to?(:manufacturer_id)
                    %td
                      =obj.manufacturer.try(:title)
                  -if obj.respond_to?(:question)
                    %td
                      =obj.question
                  -if obj.respond_to?(:name)
                    %td
                      =obj.name
                  -if obj.respond_to?(:first_name)
                    %td
                      =obj.first_name
                  -if obj.respond_to?(:body)
                    %td
                      %small
                        =obj.body
                  -if obj.respond_to?(:slug)
                    %td
                      =url_for_page(obj)
                  -if obj.respond_to?(:email)
                    %td
                      =obj.email

                  %td
                    =time_ago_in_words(obj.created_at)
                    =t('admin.form.created_ago')
                  %td.text-right
                    .btn-group
                      =link_to t('admin.form.actions.edit.verb'), send("edit_admin_#{local_assigns[:namespace]}#{object_name(object)}_path", obj), class: "btn-white btn btn-xs"
                      =link_to t('admin.form.actions.delete'), send("admin_#{local_assigns[:namespace]}#{object_name(object)}_path", obj), method: :delete, data: {confirm: t('admin.form.confirm') }, class: "btn-white btn btn-xs"
        .row
          .col-sm-12.m-b-xs
            =render partial: "admin/shared/form/listing/pager", locals: { object: object }
            / %ul.pagination.pull-right
